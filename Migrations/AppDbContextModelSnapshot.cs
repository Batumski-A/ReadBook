// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReadBook.Data;

#nullable disable

namespace ReadBook.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-preview.4.22229.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ReadBook.Models.Pdf.AllBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BookName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BookPages")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("allBooks");
                });

            modelBuilder.Entity("ReadBook.Models.Pdf.Content", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ContentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GoToPage")
                        .HasColumnType("int");

                    b.Property<string>("GoToPageTextPostion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoToPageTextWidthAndHeight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PageIndex")
                        .HasColumnType("int");

                    b.Property<int>("PdfRequestId")
                        .HasColumnType("int");

                    b.Property<string>("TextPosition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextWidthAndHeight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("linkType")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("contents");
                });
#pragma warning restore 612, 618
        }
    }
}
